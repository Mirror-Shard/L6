#!/usr/bin/env python3
import math
import sys



# Проверяет, является ли числом
def isDigit(x):
    try:
        float(x)
        return True
    except ValueError:
        return False



if __name__ == '__main__':

    print("Введите элементы вещественного типа в массив через пробел:")
    a = list(map(float, input().split()))

    # Количество отрицательных чисел
    negative = 0
    # Сумма модулей после минимального элемента(по модулю)
    summ = 0
    # Минимальный элемент
    a_min = a[0]
    i_min = 0
    # Пустой список для того чтобы запомнить элементы возведённые в квадрат
    neg_lst = [b for b in enumerate(a, 0)]

    # Проходит по всем элементам массива
    for i, item in enumerate(a):

        if not isDigit(a[i]):
            print("Не все элементы массива являются числами", file=sys.stderr)
            exit(1)

        # Считает отрицательные элементы и возводит их в квадрат
        if a[i] < 0:
            a[i] = a[i] ** 2
            negative += 1
            # Запоминает элементы возведённые в квадрат
            neg_lst[i] = a[i]

        # Ищет минимальный элемент
        if math.fabs(item) < a_min:
            i_min, a_min = i, math.fabs(item)


    # Проходит по элементам после минимального, считает их сумму и возводит в квадрат
    # оставшиеся элементы
    for i, item in enumerate(a, start=i_min+1):
        # Если элемент был возведён в квадрат, ищет его корень
        if a[1] == neg_lst[1]:
            a[1] = math.sqrt(a[1])
        summ += math.fabs(a[1])

    # Сортирует по возрастанию
    a.sort()

    print(f"\nКоличество отрицательных элементов списка: {negative}")
    print(f"\nСумма модулей элементов списка, расположенных после минимального по модулю")
    print(f"элемента: {summ}")
    print(f"\nВсе отрицательные элементы списка были заменены их квадратами,")
    print(f"а затем список был упорядочен по возрастанию:\n{a}")
